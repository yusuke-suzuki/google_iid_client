=begin
#Google Instance ID API

#The Instance ID API lets you integrate Instance ID with your Android or iOS app. Instance ID provides a unique identifier for each instance of your app and a mechanism to authenticate and authorize actions, like sending messages via Firebase Cloud Messaging. https://developers.google.com/instance-id/reference/server 

OpenAPI spec version: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.0-SNAPSHOT

=end

require 'uri'

module GoogleIidClient
  class InfoApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get information about app instances
    # To get information about an app instance, call the Instance ID service at this endpoint, providing the app instance's token. 
    # @param iid_token A valid instance ID token.
    # @param details set this query parameter to true to get available IID token details, including connection information and FCM or GCM topic subscription information (if any) for the device associated with this token. When not specified, defaults to false. 
    # @param [Hash] opts the optional parameters
    # @return [AppInstanceInfo]
    def iid_info_iid_token_get(iid_token, details, opts = {})
      data, _status_code, _headers = iid_info_iid_token_get_with_http_info(iid_token, details, opts)
      data
    end

    # Get information about app instances
    # To get information about an app instance, call the Instance ID service at this endpoint, providing the app instance&#39;s token. 
    # @param iid_token A valid instance ID token.
    # @param details set this query parameter to true to get available IID token details, including connection information and FCM or GCM topic subscription information (if any) for the device associated with this token. When not specified, defaults to false. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(AppInstanceInfo, Fixnum, Hash)>] AppInstanceInfo data, response status code and response headers
    def iid_info_iid_token_get_with_http_info(iid_token, details, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InfoApi.iid_info_iid_token_get ...'
      end
      # verify the required parameter 'iid_token' is set
      if @api_client.config.client_side_validation && iid_token.nil?
        fail ArgumentError, "Missing the required parameter 'iid_token' when calling InfoApi.iid_info_iid_token_get"
      end
      # verify the required parameter 'details' is set
      if @api_client.config.client_side_validation && details.nil?
        fail ArgumentError, "Missing the required parameter 'details' when calling InfoApi.iid_info_iid_token_get"
      end
      # resource path
      local_var_path = '/iid/info/{iid_token}'.sub('{' + 'iid_token' + '}', iid_token.to_s).sub('{' + 'details' + '}', details.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['ServerKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AppInstanceInfo')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InfoApi#iid_info_iid_token_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
